enum Role {
  ADMIN
  STUDENT
  TEACHER
}

interface UserInterface {
  id: ID!
  name: String!
  loginName: String!
  password: String!
  createdAt: String!
  updatedAt: String!
  subjects: [Subject!]
}

# Common inputs
input NewUser {
  name: String!
  password: String!
  loginName: String!
}

input LoginUser {
  loginName: String!
  password: String!
}

# Return common types
type LoginResponse {
  name: String!
  loginName: String!
  token: String
}

type CommonUser {
  id: ID
  name: String!
  loginName: String!
}

# Inputs (Student)
input UserToUpdate {
  name: String
  subjects: [String!]
}

# Return Types (Student)
type UserReturn {
  id: ID!
  name: String!
  loginName: String!
  subjects: [Subject]
}

type Query {
  getMe: CommonUser!
}

type Mutation {
  createUser(input: NewUser!): UserReturn!
  login(input: LoginUser!): LoginResponse
  updateMyself(input: UserToUpdate!): UserReturn
}
